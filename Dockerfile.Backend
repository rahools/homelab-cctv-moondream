# Stage 1: Base image with dependencies
FROM node:lts-alpine AS prune
RUN apk add --no-cache libc6-compat
WORKDIR /app
RUN npm install turbo --global
COPY . .
RUN turbo prune cctv-detector --docker

# Stage 2: Install production dependencies
FROM node:lts-alpine AS installer
WORKDIR /app
COPY --from=prune /app/out/json/ .
RUN npm install -g pnpm@9 && \
    pnpm config set "auto-install-peers" true && \
    pnpm install --prod --frozen-lockfile

# Stage 3: Build the application
FROM node:lts-alpine AS builder
WORKDIR /app
COPY --from=installer /app .
COPY --from=prune /app/out/full .
RUN npm install turbo --global && \
    npm install -g pnpm@9 && \
    pnpm run build -F cctv-detector

# Stage 4: Final image
FROM node:lts-alpine
WORKDIR /app
COPY --from=builder /app/apps/cctv-detector/.output .output
EXPOSE 3002
CMD ["node", ".output/server/index.mjs"]